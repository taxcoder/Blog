<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tanx.blog.mapper.TagMapper">

    <resultMap id="BaseResultMap" type="com.tanx.blog.entity.po.Tag">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="emojiId" column="emoji_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="CHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,emoji_id,name,
        create_time,update_time
    </sql>

    <select id="tagsListDto" resultType="com.tanx.blog.entity.dto.TagDto">
        select b_tag.*,IFNULL(b.articleCount, 0) as articleCount from b_tag left join
        (
        select bt.id,bt.name,bt.is_remove,bt.create_time,bt.update_time,count(bt.id) as articleCount
        from b_tag bt,r_article_tag rat,b_article ba
        where bt.id = rat.tag_id and ba.id = rat.article_id
        and ba.recovery = false
        group by bt.id,bt.name,bt.is_remove,bt.create_time,bt.update_time
        ) as b
        on b_tag.id = b.id

    </select>
    <select id="tagsListLimitDto" resultType="com.tanx.blog.entity.dto.TagDto">
        select b_tag.*,IFNULL(b.articleCount, 0) as articleCount from b_tag left join
        (
        select bt.id,bt.name,bt.is_remove,bt.create_time,bt.update_time,count(bt.id) as articleCount
        from b_tag bt,r_article_tag rat,b_article ba
        where bt.id = rat.tag_id and ba.id = rat.article_id
        and ba.recovery = false
        group by bt.id,bt.name,bt.is_remove,bt.create_time,bt.update_time
        ) as b
        on b_tag.id = b.id
    </select>

    <select id="searchByName" resultType="com.tanx.blog.entity.dto.TagDto">
        select b_tag.*, IFNULL(b.articleCount, 0) as articleCount
        from b_tag
        left join
        (select bt.id, bt.name, bt.is_remove, bt.create_time, bt.update_time, count(bt.id) as articleCount
        from b_tag bt,
        r_article_tag rat,
        b_article ba
        where bt.id = rat.tag_id
        and ba.id = rat.article_id
        and ba.recovery = false
        group by bt.id, bt.name, bt.is_remove, bt.create_time, bt.update_time) as b
        on b_tag.id = b.id
        where LOCATE(#{value}, b_tag.name) > 0
    </select>
</mapper>
