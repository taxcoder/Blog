<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tanx.blog.mapper.ClassificationMapper">

    <resultMap id="BaseResultMap" type="com.tanx.blog.entity.po.Classification">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="CHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,create_time,
        update_time
    </sql>
    <select id="selectClassificationList" resultType="com.tanx.blog.entity.dto.ClassificationArticleDto"
            resultMap="classificationArticle">
        select bc.*,ba.id as articleId,ba.title as title
        from b_classification bc left join
        b_article ba
        on ba.classification_id = bc.id
        and ba.recovery = false
    </select>

    <select id="searchById"
            resultType="com.tanx.blog.entity.dto.ClassificationArticleDto"
            resultMap="classificationArticle">
        select bc.*, ba.id as articleId, ba.title
        from (select *
        from b_classification bc
        where LOCATE(#{searchValue}, bc.id)
        > 0) as bc
        left join b_article ba on ba.classification_id = bc.id and ba.recovery = false
    </select>

    <select id="searchByArticleCountEqual"
            resultType="com.tanx.blog.entity.dto.ClassificationArticleDto"
            resultMap="classificationArticle">
        select bc.*,ba.id,ba.title from (select b.id,b.name,b.create_time,b.update_time from
        (select IF(ISNULL(ANY_VALUE(ba.id)), 0, count(bc.id)) as count,
        bc.id,
        bc.name,bc.update_time,bc.create_time,
        ANY_VALUE(ba.id) as articleId,
        ANY_VALUE(ba.title) as title
        from b_classification bc
        left join b_article ba on ba.classification_id = bc.id
        and ba.recovery = false
        group by bc.id) as b
        where count = #{searchValue}
        limit #{current},#{size}) as bc
        left join
        b_article ba
        on bc.id = ba.classification_id
        and ba.recovery = false
    </select>

    <select id="searchByArticleCountEqualOrLessThan"
            resultType="com.tanx.blog.entity.dto.ClassificationArticleDto"
            resultMap="classificationArticle">
        select bc.*,ba.id,ba.title from (select b.id,b.name,b.create_time,b.update_time from
        (select IF(ISNULL(ANY_VALUE(ba.id)), 0, count(bc.id)) as count,
        bc.id,
        bc.name,bc.update_time,bc.create_time,
        ANY_VALUE(ba.id) as articleId,
        ANY_VALUE(ba.title) as title
        from b_classification bc
        left join b_article ba on ba.classification_id = bc.id
        and ba.recovery = false
        group by bc.id) as b
        where count &lt;= #{searchValue}
        limit #{current},#{size}) as bc
        left join
        b_article ba
        on bc.id = ba.classification_id
        and ba.recovery = false
    </select>

    <select id="searchByArticleCountEqualOrGreaterThan"
            resultType="com.tanx.blog.entity.dto.ClassificationArticleDto"
            resultMap="classificationArticle">
        select bc.*,ba.id,ba.title from (select b.id,b.name,b.create_time,b.update_time from
        (select IF(ISNULL(ANY_VALUE(ba.id)), 0, count(bc.id)) as count,
        bc.id,
        bc.name,bc.update_time,bc.create_time,
        ANY_VALUE(ba.id) as articleId,
        ANY_VALUE(ba.title) as title
        from b_classification bc
        left join b_article ba on ba.classification_id = bc.id
        and ba.recovery = false
        group by bc.id) as b
        where count &gt;= #{searchValue}
        limit #{current},#{size}) as bc
        left join
        b_article ba
        on bc.id = ba.classification_id
        and ba.recovery = false
    </select>

    <select id="searchLikeName"
            resultType="com.tanx.blog.entity.dto.ClassificationArticleDto"
            resultMap="classificationArticle">
        select bc.*, ba.id as articleId, ba.title
        from (select * from b_classification bc where locate(#{searchValue}, name) > 0) as bc
        left join b_article ba on ba.classification_id = bc.id and ba.recovery = false
    </select>

    <select id="selectListAll" resultType="com.tanx.blog.entity.dto.ClassificationDto">
        select b.id, b.name, b.count
        from (select bc.id, bc.name, any_value(ba.id), IF(ISNULL(ANY_VALUE(ba.id)), 0, count(bc.id)) as count
        from b_classification bc
        left join b_article ba on bc.id = ba.classification_id and ba.recovery = false
        group by bc.id) as b
    </select>

    <resultMap id="classificationArticle" type="com.tanx.blog.entity.dto.ClassificationArticleDto">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <collection property="articles" ofType="com.tanx.blog.entity.dto.ArticleInfoDto">
            <id property="id" column="articleId"/>
            <result property="title" column="title"/>
        </collection>
    </resultMap>

</mapper>
